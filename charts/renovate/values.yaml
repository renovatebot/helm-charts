cronjob:
  # At 01:00 every day
  schedule: '0 1 * * *'
  annotations: {}
  labels: {}
  concurrencyPolicy: ''
  failedJobsHistoryLimit: ''
  successfulJobsHistoryLimit: ''
  jobRestartPolicy: Never
  jobBackoffLimit: ''

pod:
  annotations: {}
  labels: {}

image:
  repository: renovate/renovate
  tag: 25.67.0
  pullPolicy: IfNotPresent

imagePullSecrets: {}

renovate:
  # -- Custom exiting global renovate config
  existingConfigFile: ''
  # -- Inline global renovate config.json
  config: ''
  # See https://docs.renovatebot.com/self-hosted-configuration
  # config: |
  #   {
  #     "platform": "gitlab",
  #     "endpoint": "https://gitlab.example.com/api/v4",
  #     "token": "your-gitlab-renovate-user-token",
  #     "autodiscover": "false",
  #     "dryRun": true,
  #     "printConfig": true,
  #     "logLevel": "debug",
  #     "repositories": ["username/repo", "orgname/repo"]
  #   }

ssh_config:
  enabled: false
  # Provide .ssh config file contents
  id_rsa: ''
  id_rsa_pub: ''
  config: ''
  # or provide the name of an existing secret to be read instead.
  existingSecret: ''
# Provide secrets inline
secrets: {}
# or provide the name of an existing secret to be read instead.
existingSecret: ''

dind:
  # -- Enable dind sidecar usage?
  enabled: false
  slim:
    # -- Do not add `-slim` suffix to image tag when using dind
    enabled: true
  image:
    repository: docker
    tag: 20.10.8-dind
    pullPolicy: IfNotPresent

# -- Additional configmaps. A generated configMap name is: "renovate.fullname" + "extra" + name(below) e.g. renovate-netrc-config
extraConfigmaps: []
# extraConfigmaps:
#   - name: netrc-config
#     data:
#       .netrc: |-
#         machine gitlab.example.com
#         login gitlab-ci-token
#         password some-pass
#   - name: yet-another-config
#     data:
#       ya-config.yaml: |-
#         "key"="value"
#         "key1"="value1"

# -- Additional volumes to the pod
extraVolumes: []
# extraVolumes:
#   - name: netrc-config
#     configMap:
#       name: renovate-extra-netrc-config

# -- Additional volumeMounts to the container
extraVolumeMounts: []
# extraVolumeMounts:
#   - name: netrc-config
#     mountPath: /home/ubuntu/.netrc
#     subPath: .netrc

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

envFrom: []

env: {}

redis:
  # Configuration for a Redis subchart. Additional documenation at
  # https://github.com/bitnami/charts/tree/master/bitnami/redis

  # -- Enable the Redis subchart?
  enabled: false

  # -- Disable replication by default
  architecture: standalone

  auth:
    # -- Don't require a password by default
    usePassword: false

  # -- Override Kubernetes version for redis chart
  kubeVersion: ''

# Override APIVersions
# If you want to template helm charts but cannot access k8s API server
# you can set api versions here
apiVersionOverrides:
  # -- String to override apiVersion of cronjob rendered by this helm chart
  cronjob: ''
